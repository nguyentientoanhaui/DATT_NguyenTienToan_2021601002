import pyodbc

def fix_condition():
    connection_string = "DRIVER={SQL Server};SERVER=localhost;DATABASE=Shopping_Demo;Trusted_Connection=yes;"
    
    try:
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()
        
        print("üîß FIXING CONDITION COLUMN - KH√îI PH·ª§C C·ªòT CONDITION:")
        print("=" * 50)
        
        # C√°c c√¢u l·ªánh SQL ƒë·ªÉ kh√¥i ph·ª•c Condition
        condition_queries = [
            "UPDATE Products SET Condition = 'Excellent' WHERE Condition = 'Xu·∫•t s·∫Øc'",
            "UPDATE Products SET Condition = 'Very Good' WHERE Condition = 'R·∫•t t·ªët'",
            "UPDATE Products SET Condition = 'Good' WHERE Condition = 'T·ªët'",
            "UPDATE Products SET Condition = 'Fair' WHERE Condition = 'Kh√°'",
            "UPDATE Products SET Condition = 'Poor' WHERE Condition = 'K√©m'",
            "UPDATE Products SET Condition = 'New' WHERE Condition = 'M·ªõi'",
            "UPDATE Products SET Condition = 'Vintage' WHERE Condition = 'C·ªï ƒëi·ªÉn'",
            "UPDATE Products SET Condition = 'Pre-owned' WHERE Condition = 'ƒê√£ s·ª≠ d·ª•ng'",
            "UPDATE Products SET Condition = 'Unworn' WHERE Condition = 'Ch∆∞a ƒëeo'",
            "UPDATE Products SET Condition = 'Mint' WHERE Condition = 'Ho√†n h·∫£o'"
        ]
        
        total_affected = 0
        for i, query in enumerate(condition_queries):
            try:
                cursor.execute(query)
                affected = cursor.rowcount
                total_affected += affected
                if affected > 0:
                    print(f"  ‚úÖ Query {i+1}: {affected} rows affected")
            except Exception as e:
                print(f"  ‚ö†Ô∏è Query {i+1} error: {e}")
        
        conn.commit()
        
        # Ki·ªÉm tra k·∫øt qu·∫£
        cursor.execute("SELECT TOP 5 Id, Condition FROM Products ORDER BY Id")
        results = cursor.fetchall()
        
        print(f"\n‚úÖ T·ªîNG K·∫æT: {total_affected} thay ƒë·ªïi ƒë∆∞·ª£c th·ª±c hi·ªán")
        print("\nüì¶ K·∫æT QU·∫¢ CU·ªêI C√ôNG:")
        for row in results:
            print(f"  ID: {row[0]} - Condition: {row[1]}")
        
        # Th·ªëng k√™
        cursor.execute("SELECT Condition, COUNT(*) as Count FROM Products GROUP BY Condition ORDER BY Count DESC")
        stats = cursor.fetchall()
        
        print("\nüìä TH·ªêNG K√ä CONDITION:")
        for stat in stats:
            print(f"  {stat[0]}: {stat[1]} s·∫£n ph·∫©m")
        
        cursor.close()
        conn.close()
        print("\nüéâ KH√îI PH·ª§C CONDITION TH√ÄNH C√îNG!")
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

if __name__ == "__main__":
    fix_condition()
