import re

def test_sql_file():
    print("üîç KI·ªÇM TRA FILE PRODUCTS.SQL")
    print("=" * 50)
    
    try:
        # ƒê·ªçc file v·ªõi encoding UTF-8
        with open('Products.sql', 'r', encoding='utf-8', errors='ignore') as file:
            content = file.read()
        
        print(f"‚úÖ ƒê√£ ƒë·ªçc file! K√≠ch th∆∞·ªõc: {len(content)} k√Ω t·ª±")
        
        # T√¨m INSERT statements v·ªõi pattern ƒë∆°n gi·∫£n
        insert_pattern = r"INSERT\s+\[dbo\]\.\[Products\]"
        matches = re.findall(insert_pattern, content, re.IGNORECASE)
        
        print(f"‚úÖ T√¨m th·∫•y {len(matches)} INSERT statements v·ªõi pattern ƒë∆°n gi·∫£n")
        
        # T√¨m INSERT statements v·ªõi pattern ph·ª©c t·∫°p h∆°n
        insert_pattern2 = r"INSERT\s+\[dbo\]\.\[Products\].*?VALUES"
        matches2 = re.findall(insert_pattern2, content, re.IGNORECASE | re.DOTALL)
        
        print(f"‚úÖ T√¨m th·∫•y {len(matches2)} INSERT statements v·ªõi pattern ph·ª©c t·∫°p")
        
        # T√¨m d√≤ng ƒë·∫ßu ti√™n c√≥ INSERT
        lines = content.split('\n')
        insert_lines = [i+1 for i, line in enumerate(lines) if 'INSERT' in line.upper()]
        
        if insert_lines:
            print(f"‚úÖ INSERT statements b·∫Øt ƒë·∫ßu t·ª´ d√≤ng: {insert_lines[0]}")
            print(f"üìÑ D√≤ng ƒë·∫ßu ti√™n: {lines[insert_lines[0]-1][:100]}...")
        else:
            print("‚ùå Kh√¥ng t√¨m th·∫•y INSERT statements")
        
        # Hi·ªÉn th·ªã 10 d√≤ng ƒë·∫ßu ti√™n c√≥ INSERT
        print("\nüìã 10 D√íNG ƒê·∫¶U TI√äN C√ì INSERT:")
        for i, line in enumerate(lines):
            if 'INSERT' in line.upper():
                print(f"  D√≤ng {i+1}: {line[:80]}...")
                if len([l for l in lines[:i+1] if 'INSERT' in l.upper()]) >= 10:
                    break
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

if __name__ == "__main__":
    test_sql_file()
