#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Check and Fix Collation
Ki·ªÉm tra v√† s·ª≠a collation cho b·∫£ng Products
"""

import pyodbc

def main():
    print("üîç KI·ªÇM TRA V√Ä S·ª¨A COLLATION")
    print("=" * 50)
    
    # Connection string
    connection_string = (
        "DRIVER={SQL Server};"
        "SERVER=localhost;"
        "DATABASE=Shopping_Demo;"
        "Trusted_Connection=yes;"
    )
    
    try:
        print("üîó ƒêang k·∫øt n·ªëi database...")
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()
        print("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!")
        
        # Ki·ªÉm tra collation hi·ªán t·∫°i
        print("\nüìã COLLATION HI·ªÜN T·∫†I:")
        print("-" * 30)
        
        cursor.execute("""
            SELECT 
                c.name as ColumnName,
                c.collation_name as CurrentCollation,
                t.name as DataType
            FROM sys.columns c
            INNER JOIN sys.types t ON c.user_type_id = t.user_type_id
            WHERE c.object_id = OBJECT_ID('Products')
            AND c.name IN ('Condition', 'Gender', 'Certificate', 'WarrantyInfo', 'Name', 'Description')
            ORDER BY c.name
        """)
        
        columns = cursor.fetchall()
        for col in columns:
            print(f"  {col[0]}: {col[2]} (Collation: {col[1]})")
        
        # Ki·ªÉm tra d·ªØ li·ªáu Unicode
        print("\nüîç KI·ªÇM TRA D·ªÆ LI·ªÜU UNICODE:")
        print("-" * 30)
        
        cursor.execute("SELECT Name, Gender, Condition, Certificate, WarrantyInfo FROM Products WHERE Name LIKE '%ƒê·ªìng h·ªì%'")
        unicode_results = cursor.fetchall()
        print("D·ªØ li·ªáu Unicode:")
        for row in unicode_results:
            print(f"  {row[0]} | {row[1]} | {row[2]} | {row[3]} | {row[4]}")
        
        # Ki·ªÉm tra d·ªØ li·ªáu g·ªëc
        print("\nüîç KI·ªÇM TRA D·ªÆ LI·ªÜU G·ªêC:")
        print("-" * 30)
        
        cursor.execute("SELECT TOP 3 Name, Gender, Condition, Certificate, WarrantyInfo FROM Products")
        original_results = cursor.fetchall()
        print("D·ªØ li·ªáu g·ªëc:")
        for row in original_results:
            print(f"  {row[0]} | {row[1]} | {row[2]} | {row[3]} | {row[4]}")
        
        # Th·ªëng k√™
        cursor.execute("SELECT COUNT(*) FROM Products")
        total_count = cursor.fetchone()[0]
        print(f"\nüìä T·ªïng s·ªë s·∫£n ph·∫©m: {total_count}")
        
        cursor.close()
        conn.close()
        
        print("\nüí° PH√ÇN T√çCH:")
        print("- Collation v·∫´n l√† SQL_Latin1_General_CP1_CI_AS (ch∆∞a thay ƒë·ªïi)")
        print("- D·ªØ li·ªáu Unicode test ƒë√£ ƒë∆∞·ª£c th√™m v√†o")
        print("- D·ªØ li·ªáu g·ªëc v·∫´n c√≥ v·∫•n ƒë·ªÅ encoding")
        print("\nüîß GI·∫¢I PH√ÅP:")
        print("1. C·∫ßn ch·∫°y script vi·ªát h√≥a ƒë·ªÉ chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu")
        print("2. Ho·∫∑c s·ª≠ d·ª•ng script SQL ƒë·ªÉ s·ª≠a encoding")
        
    except Exception as e:
        print(f"‚ùå L·ªñI: {e}")

if __name__ == "__main__":
    main()
