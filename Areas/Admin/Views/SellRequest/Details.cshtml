@model SellRequestModel
@using Shopping_Demo.Models

@{
    ViewData["Title"] = "Chi Tiết Đơn Thu Mua";
}

@section Styles {
    <style>
        .simple-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: #ffffff;
        }
        
        .simple-header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #000000;
        }
        
        .simple-title {
            font-size: 28px;
            font-weight: 700;
            color: #000000;
            margin: 0 0 10px 0;
        }
        
        .simple-subtitle {
            font-size: 16px;
            color: #666666;
            margin: 0;
        }
        
        .simple-card {
            background: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 20px;
            overflow: hidden;
        }
        
        .simple-card-header {
            background: #f8f9fa;
            padding: 15px 20px;
            border-bottom: 1px solid #e0e0e0;
            font-weight: 600;
            color: #000000;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .simple-card-body {
            padding: 20px;
        }
        
        .simple-info-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid #f0f0f0;
        }
        
        .simple-info-row:last-child {
            border-bottom: none;
        }
        
        .simple-info-label {
            font-weight: 600;
            color: #000000;
            min-width: 140px;
        }
        
        .simple-info-value {
            color: #666666;
            flex: 1;
            text-align: right;
        }
        
        .simple-btn {
            background: #000000;
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: background-color 0.2s;
        }
        
        .simple-btn:hover {
            background: #333333;
            color: #ffffff;
            text-decoration: none;
        }
        
        .simple-btn-secondary {
            background: #ffffff;
            color: #000000;
            border: 1px solid #e0e0e0;
        }
        
        .simple-btn-secondary:hover {
            background: #f8f9fa;
            color: #000000;
        }
        
        .simple-btn-danger {
            background: #dc3545;
            color: #ffffff;
        }
        
        .simple-btn-danger:hover {
            background: #c82333;
            color: #ffffff;
        }
        
        .simple-btn-success {
            background: #28a745;
            color: #ffffff;
        }
        
        .simple-btn-success:hover {
            background: #218838;
            color: #ffffff;
        }
        
        .simple-btn-info {
            background: #17a2b8;
            color: #ffffff;
        }
        
        .simple-btn-info:hover {
            background: #138496;
            color: #ffffff;
        }
        
        .simple-badge {
            padding: 6px 12px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .badge-pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .badge-reviewed {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .badge-contacted {
            background: #d4edda;
            color: #155724;
        }
        
        .badge-agreed {
            background: #d1ecf1;
            color: #0c5460;
        }
        
        .badge-completed {
            background: #d4edda;
            color: #155724;
        }
        
        .badge-rejected {
            background: #f8d7da;
            color: #721c24;
        }
        
        .badge-cancelled {
            background: #e2e3e5;
            color: #383d41;
        }
        
        .simple-content-box {
            background: #f8f9fa;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            padding: 15px;
            margin: 10px 0;
        }
        
        .simple-actions {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid #e0e0e0;
        }
        
        .simple-timeline {
            position: relative;
            padding-left: 30px;
        }
        
        .simple-timeline-item {
            position: relative;
            margin-bottom: 20px;
        }
        
        .simple-timeline-marker {
            position: absolute;
            left: -35px;
            top: 5px;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #000000;
        }
        
        .simple-timeline-content {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 4px;
            border-left: 3px solid #000000;
        }
        
        .simple-timeline-title {
            margin-bottom: 5px;
            font-weight: 600;
            color: #000000;
        }
        
        .simple-timeline-text {
            margin-bottom: 5px;
            color: #666666;
        }
        
        .simple-image {
            max-width: 100%;
            height: auto;
            border-radius: 4px;
            border: 1px solid #e0e0e0;
        }
        
        .simple-price {
            font-size: 18px;
            font-weight: 700;
            color: #000000;
        }
        
        .simple-empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #666666;
        }
        
        .simple-empty-state i {
            font-size: 48px;
            margin-bottom: 15px;
            color: #cccccc;
        }
        
        @@media (max-width: 768px) {
            .simple-container {
                padding: 10px;
            }
            
            .simple-info-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 5px;
            }
            
            .simple-info-value {
                text-align: left;
            }
            
            .simple-actions {
                flex-direction: column;
            }
        }
    </style>
}

<div class="simple-container">
    <!-- Page Header -->
    <div class="simple-header">
        <h1 class="simple-title">Chi Tiết Đơn Thu Mua</h1>
        <p class="simple-subtitle">Mã đơn: #@Model.Id</p>
        <div style="margin-top: 20px;">
            <a href="@Url.Action("Index")" class="simple-btn simple-btn-secondary">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M19 12H5M12 19l-7-7 7-7"/>
                </svg>
                Quay Lại
            </a>
            <a href="@Url.Action("Edit", new { id = Model.Id })" class="simple-btn">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                    <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                </svg>
                Chỉnh Sửa
            </a>
        </div>
    </div>

    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
        <!-- Customer Information -->
        <div class="simple-card">
            <div class="simple-card-header">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                    <circle cx="12" cy="7" r="4"></circle>
                </svg>
                Thông Tin Khách Hàng
            </div>
            <div class="simple-card-body">
                <div class="simple-info-row">
                    <span class="simple-info-label">Họ và tên:</span>
                    <span class="simple-info-value">@Model.FullName</span>
                </div>
                <div class="simple-info-row">
                    <span class="simple-info-label">Email:</span>
                    <span class="simple-info-value">
                        <a href="mailto:@Model.Email" style="color: #000000;">@Model.Email</a>
                    </span>
                </div>
                <div class="simple-info-row">
                    <span class="simple-info-label">Số điện thoại:</span>
                    <span class="simple-info-value">
                        <a href="tel:@Model.PhoneNumber" style="color: #000000;">@Model.PhoneNumber</a>
                    </span>
                </div>
                <div class="simple-info-row">
                    <span class="simple-info-label">Trạng thái:</span>
                    <span class="simple-info-value">
                        <span class="simple-badge @GetStatusBadgeClass(Model.Status)">
                            @GetStatusDisplayName(Model.Status)
                        </span>
                    </span>
                </div>
            </div>
        </div>

        <!-- Product Information -->
        <div class="simple-card">
            <div class="simple-card-header">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="12" cy="12" r="10"></circle>
                    <polyline points="12,6 12,12 16,14"></polyline>
                </svg>
                Thông Tin Sản Phẩm
            </div>
            <div class="simple-card-body">
                @if (Model.Product != null)
                {
                    <div class="simple-info-row">
                        <span class="simple-info-label">Tên sản phẩm:</span>
                        <span class="simple-info-value">@Model.Product.Name</span>
                    </div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Thương hiệu:</span>
                        <span class="simple-info-value">@Model.Product.Brand?.Name</span>
                    </div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Danh mục:</span>
                        <span class="simple-info-value">@Model.Product.Category?.Name</span>
                    </div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Giá hiện tại:</span>
                        <span class="simple-info-value">
                            <span class="simple-price">@Model.Product.Price.ToString("N0") VNĐ</span>
                        </span>
                    </div>
                    <div style="text-align: center; margin-top: 15px;">
                        <a href="@Url.Action("Details", "Product", new { area = "Admin", id = Model.Product.Id })" 
                           class="simple-btn simple-btn-info">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
                                <polyline points="15,3 21,3 21,9"></polyline>
                                <line x1="10" y1="14" x2="21" y2="3"></line>
                            </svg>
                            Xem Chi Tiết Sản Phẩm
                        </a>
                    </div>
                }
                else
                {
                    <div class="simple-empty-state">
                        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="15" y1="9" x2="9" y2="15"></line>
                            <line x1="9" y1="9" x2="15" y2="15"></line>
                        </svg>
                        <p>Sản phẩm không tồn tại hoặc đã bị xóa</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Watch Information -->
    <div class="simple-card">
        <div class="simple-card-header">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
            </svg>
            Thông Tin Đồng Hồ
        </div>
        <div class="simple-card-body">
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                <div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Mô tả đồng hồ:</span>
                    </div>
                    <div class="simple-content-box">
                        @Model.WatchInfo
                    </div>
                </div>
                <div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Tình trạng:</span>
                        <span class="simple-info-value">
                            @(string.IsNullOrEmpty(Model.Condition) ? "Chưa cung cấp" : Model.Condition)
                        </span>
                    </div>
                    <div class="simple-info-row">
                        <span class="simple-info-label">Năm sản xuất:</span>
                        <span class="simple-info-value">
                            @(Model.Year?.ToString() ?? "Chưa cung cấp")
                        </span>
                    </div>
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div style="margin-top: 20px;">
                    <div class="simple-info-row">
                        <span class="simple-info-label">Hình ảnh đồng hồ:</span>
                    </div>
                    <div style="text-align: center;">
                        <img src="@Model.ImageUrl" alt="Hình ảnh đồng hồ" class="simple-image" style="max-height: 300px;">
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div style="margin-top: 20px;">
                    <div class="simple-info-row">
                        <span class="simple-info-label">Ghi chú thêm:</span>
                    </div>
                    <div class="simple-content-box">
                        @Model.Notes
                    </div>
                </div>
            }
        </div>
    </div>

    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
        <!-- Pricing Information -->
        <div class="simple-card">
            <div class="simple-card-header">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <line x1="12" y1="1" x2="12" y2="23"></line>
                    <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
                </svg>
                Thông Tin Giá Cả
            </div>
            <div class="simple-card-body">
                <div class="simple-info-row">
                    <span class="simple-info-label">Giá mong muốn:</span>
                    <span class="simple-info-value">
                        @if (Model.ExpectedPrice.HasValue)
                        {
                            <span class="simple-price">@Model.ExpectedPrice.Value.ToString("N0") VNĐ</span>
                        }
                        else
                        {
                            <span style="color: #999999;">Chưa cung cấp</span>
                        }
                    </span>
                </div>
                <div class="simple-info-row">
                    <span class="simple-info-label">Giá đề xuất:</span>
                    <span class="simple-info-value">
                        @if (Model.SuggestedPrice.HasValue)
                        {
                            <span class="simple-price">@Model.SuggestedPrice.Value.ToString("N0") VNĐ</span>
                        }
                        else
                        {
                            <span style="color: #999999;">Chưa có</span>
                        }
                    </span>
                </div>
            </div>
        </div>

        <!-- Admin Response -->
        <div class="simple-card">
            <div class="simple-card-header">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                </svg>
                Phản Hồi Admin
            </div>
            <div class="simple-card-body">
                @if (!string.IsNullOrEmpty(Model.AdminResponse))
                {
                    <div class="simple-content-box">
                        @Model.AdminResponse
                    </div>
                }
                else
                {
                    <div class="simple-empty-state">
                        <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                            <line x1="9" y1="9" x2="15" y2="15"></line>
                            <line x1="15" y1="9" x2="9" y2="15"></line>
                        </svg>
                        <p>Chưa có phản hồi từ admin</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Timeline -->
    <div class="simple-card">
        <div class="simple-card-header">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
            </svg>
            Lịch Sử Đơn Hàng
        </div>
        <div class="simple-card-body">
            <div class="simple-timeline">
                <div class="simple-timeline-item">
                    <div class="simple-timeline-marker"></div>
                    <div class="simple-timeline-content">
                        <h6 class="simple-timeline-title">Đơn hàng được tạo</h6>
                        <p class="simple-timeline-text">Khách hàng đã gửi yêu cầu thu mua</p>
                        <small style="color: #999999;">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                    </div>
                </div>
                
                @if (Model.UpdatedAt.HasValue)
                {
                    <div class="simple-timeline-item">
                        <div class="simple-timeline-marker"></div>
                        <div class="simple-timeline-content">
                            <h6 class="simple-timeline-title">Cập nhật lần cuối</h6>
                            <p class="simple-timeline-text">Trạng thái: @GetStatusDisplayName(Model.Status)</p>
                            <small style="color: #999999;">@Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</small>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="simple-card">
        <div class="simple-card-header">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polygon points="13,2 3,14 12,14 11,22 21,10 12,10 13,2"></polygon>
            </svg>
            Thao Tác Nhanh
        </div>
        <div class="simple-card-body">
            <div class="simple-actions">
                <button class="simple-btn simple-btn-info" onclick="quickUpdateStatus(@Model.Id, 'Reviewed')">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                        <circle cx="12" cy="12" r="3"></circle>
                    </svg>
                    Đánh Dấu Đã Xem
                </button>
                <a href="@Url.Action("Contact", new { id = Model.Id })" class="simple-btn">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                        <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                    Đã Liên Hệ
                </a>
                <button class="simple-btn simple-btn-success" onclick="quickUpdateStatus(@Model.Id, 'Agreed')">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                        <polyline points="22,4 12,14.01 9,11.01"></polyline>
                    </svg>
                    Đã Thỏa Thuận
                </button>
                <a href="@Url.Action("Reject", new { id = Model.Id })" class="simple-btn simple-btn-danger">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                    </svg>
                    Từ Chối
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Quick Status Update Modal -->
<div class="modal fade" id="quickStatusModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cập Nhật Trạng Thái Nhanh</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="quickStatusForm">
                    <input type="hidden" id="requestId" name="id">
                    <input type="hidden" id="newStatus" name="status">
                    
                    <div class="form-group">
                        <label for="adminResponse">Phản hồi từ admin:</label>
                        <textarea id="adminResponse" name="adminResponse" class="form-control" rows="3" 
                                  placeholder="Nhập phản hồi cho khách hàng..."></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label for="suggestedPrice">Giá đề xuất (VNĐ):</label>
                        <input type="number" id="suggestedPrice" name="suggestedPrice" class="form-control" 
                               placeholder="Nhập giá đề xuất...">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="submitQuickUpdate()">Cập Nhật</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function quickUpdateStatus(requestId, status) {
            document.getElementById('requestId').value = requestId;
            document.getElementById('newStatus').value = status;
            $('#quickStatusModal').modal('show');
        }

        function submitQuickUpdate() {
            const formData = new FormData(document.getElementById('quickStatusForm'));
            const data = Object.fromEntries(formData);
            
            fetch('@Url.Action("UpdateStatus", "SellRequest")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    $('#quickStatusModal').modal('hide');
                    location.reload();
                } else {
                    alert('Lỗi: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi cập nhật trạng thái');
            });
        }
    </script>
}

@functions {
    string GetStatusBadgeClass(SellRequestStatus status)
    {
        return status switch
        {
            SellRequestStatus.Pending => "badge-pending",
            SellRequestStatus.Reviewed => "badge-reviewed",
            SellRequestStatus.Contacted => "badge-contacted",
            SellRequestStatus.Agreed => "badge-agreed",
            SellRequestStatus.Completed => "badge-completed",
            SellRequestStatus.Rejected => "badge-rejected",
            SellRequestStatus.Cancelled => "badge-cancelled",
            _ => "badge-pending"
        };
    }

    string GetStatusDisplayName(SellRequestStatus status)
    {
        return status switch
        {
            SellRequestStatus.Pending => "Chờ xử lý",
            SellRequestStatus.Reviewed => "Đã xem",
            SellRequestStatus.Contacted => "Đã liên hệ",
            SellRequestStatus.Agreed => "Đã thỏa thuận",
            SellRequestStatus.Completed => "Đã hoàn thành",
            SellRequestStatus.Rejected => "Từ chối",
            SellRequestStatus.Cancelled => "Hủy",
            _ => status.ToString()
        };
    }
}