import pyodbc

def final_cleanup():
    connection_string = "DRIVER={SQL Server};SERVER=localhost;DATABASE=Shopping_Demo;Trusted_Connection=yes;"
    
    try:
        conn = pyodbc.connect(connection_string)
        cursor = conn.cursor()
        
        print("üîÑ FINAL CLEANUP - X√ìA B·ªé TI·∫æNG VI·ªÜT C√íN L·∫†I:")
        print("=" * 50)
        
        # C√°c c√¢u l·ªánh SQL ƒë·ªÉ x·ª≠ l√Ω tri·ªát ƒë·ªÉ
        cleanup_queries = [
            "UPDATE Products SET Condition = 'Excellent' WHERE Condition = 'Xu·∫•t s·∫Øc'",
            "UPDATE Products SET Gender = 'Men' WHERE Gender = 'Nam'",
            "UPDATE Products SET Description = REPLACE(Description, 'ƒê√£ s·ª≠ d·ª•ng', 'Pre-owned')",
            "UPDATE Products SET Description = REPLACE(Description, 'di s·∫£n', 'heritage')",
            "UPDATE Products SET Description = REPLACE(Description, 'c·ªï ƒëi·ªÉn', 'classic')",
            "UPDATE Products SET Description = REPLACE(Description, 'm·ªõi nh·∫•t', 'latest')",
            "UPDATE Products SET Description = REPLACE(Description, 'tuy·ªát v·ªùi', 'excellent')",
            "UPDATE Products SET Description = REPLACE(Description, 'ch·∫•t l∆∞·ª£ng', 'quality')",
            "UPDATE Products SET Description = REPLACE(Description, 'th√©p kh√¥ng g·ªâ', 'stainless steel')",
            "UPDATE Products SET Description = REPLACE(Description, 'b·ªô m√°y t·ª± ƒë·ªông', 'automatic movement')"
        ]
        
        for i, query in enumerate(cleanup_queries):
            try:
                cursor.execute(query)
                print(f"  ‚úÖ Query {i+1}: {cursor.rowcount} rows affected")
            except Exception as e:
                print(f"  ‚ö†Ô∏è Query {i+1} error: {e}")
        
        conn.commit()
        
        # Ki·ªÉm tra k·∫øt qu·∫£
        cursor.execute("SELECT TOP 2 Id, Condition, Gender, SUBSTRING(Description, 1, 100) as Desc_Short FROM Products ORDER BY Id")
        results = cursor.fetchall()
        
        print("\n‚úÖ K·∫æT QU·∫¢ SAU KHI D·ªåN D·∫∏P:")
        for row in results:
            print(f"  ID: {row[0]}, Condition: {row[1]}, Gender: {row[2]}")
            print(f"  Description: {row[3]}...")
            print("  " + "-" * 40)
        
        cursor.close()
        conn.close()
        print("\nüéâ D·ªåN D·∫∏P HO√ÄN TH√ÄNH!")
        
    except Exception as e:
        print(f"‚ùå L·ªói: {e}")

if __name__ == "__main__":
    final_cleanup()
