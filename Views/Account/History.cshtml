@model IEnumerable<OrderModel>

@{
    ViewData["Title"] = "Lịch sử mua hàng";
    int i = 1;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 20px 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .page-header {
            text-align: center;
            margin-bottom: 30px;
            padding: 25px 0;
            background: linear-gradient(135deg, #000000 0%, #333333 100%);
            color: white;
            border-radius: 12px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .page-title {
            font-size: 2.2rem;
            font-weight: 700;
            margin-bottom: 8px;
            text-transform: uppercase;
            letter-spacing: 1.5px;
        }

        .page-subtitle {
            font-size: 1rem;
            opacity: 0.9;
            font-weight: 300;
        }

        .order-tabs {
            background: white;
            border-radius: 12px;
            padding: 20px;
            margin-bottom: 25px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        }

        .tab-buttons {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .tab-button {
            padding: 12px 20px;
            border: 2px solid #e0e0e0;
            background: white;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .tab-button:hover {
            border-color: #2c3e50;
            background: #f8f9fa;
        }

        .tab-button.active {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            border-color: #2c3e50;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .order-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0,0,0,0.08);
            margin-bottom: 20px;
            overflow: hidden;
            transition: all 0.3s ease;
            border: 1px solid #e8e8e8;
        }

        .order-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.12);
        }

        .order-header {
            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            color: white;
            padding: 18px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 12px;
        }

        .order-number {
            font-size: 1.2rem;
            font-weight: 700;
            color: #ecf0f1;
        }

        .order-date {
            font-size: 0.9rem;
            opacity: 0.9;
            background: rgba(255,255,255,0.1);
            padding: 6px 12px;
            border-radius: 15px;
        }

        .order-status {
            padding: 6px 16px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-new { background: #3498db; color: white; }
        .status-pending { background: #f39c12; color: white; }
        .status-shipping { background: #9b59b6; color: white; }
        .status-delivered { background: #27ae60; color: white; }
        .status-cancelled { background: #e74c3c; color: white; }

        .order-content {
            padding: 20px;
        }

        .order-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .info-item {
            background: #f8f9fa;
            padding: 12px;
            border-radius: 8px;
            border-left: 3px solid #2c3e50;
        }

        .info-label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.85rem;
            margin-bottom: 5px;
        }

        .info-value {
            color: #34495e;
            font-size: 0.9rem;
        }

        .order-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #e0e0e0;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 20px;
            font-weight: 600;
            text-decoration: none;
            font-size: 0.8rem;
            transition: all 0.3s ease;
        }

        .btn-cancel {
            background: #e74c3c;
            color: white;
        }

        .btn-return {
            background: #f39c12;
            color: white;
        }

        .empty-state {
            text-align: center;
            padding: 50px 20px;
            background: white;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0,0,0,0.08);
        }

        @@media (max-width: 768px) {
            .page-title {
                font-size: 1.8rem;
            }
            
            .order-header {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .order-info {
                grid-template-columns: 1fr;
            }
            
            .tab-buttons {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Page Header -->
        <div class="page-header">
            <h1 class="page-title">Lịch Sử Mua Hàng</h1>
            <p class="page-subtitle">Theo dõi tất cả đơn hàng của bạn</p>
        </div>

        @if (Model.Any())
        {
            <!-- Order Tabs -->
            <div class="order-tabs">
                <div class="tab-buttons">
                    <button class="tab-button active" onclick="showTab('pending')">
                        <i class="fas fa-clock"></i>
                        Đang chờ (@Model.Count(o => o.Status == 1 || o.Status == 2))
                    </button>
                    <button class="tab-button" onclick="showTab('shipping')">
                        <i class="fas fa-truck"></i>
                        Đang giao (@Model.Count(o => o.Status == 4))
                    </button>
                    <button class="tab-button" onclick="showTab('delivered')">
                        <i class="fas fa-check-circle"></i>
                        Đã giao (@Model.Count(o => o.Status == 0))
                    </button>
                    <button class="tab-button" onclick="showTab('cancelled')">
                        <i class="fas fa-times-circle"></i>
                        Đã hủy (@Model.Count(o => o.Status == 3))
                    </button>
                </div>

                <!-- Pending Orders -->
                <div id="pending" class="tab-content active">
                    @foreach (var item in Model.Where(o => o.Status == 1 || o.Status == 2))
                    {
                        @Html.Partial("_OrderCardPartial", item)
                    }
                </div>

                <!-- Shipping Orders -->
                <div id="shipping" class="tab-content">
                    @foreach (var item in Model.Where(o => o.Status == 4))
                    {
                        @Html.Partial("_OrderCardPartial", item)
                    }
                </div>

                <!-- Delivered Orders -->
                <div id="delivered" class="tab-content">
                    @foreach (var item in Model.Where(o => o.Status == 0))
                    {
                        @Html.Partial("_OrderCardPartial", item)
                    }
                </div>

                <!-- Cancelled Orders -->
                <div id="cancelled" class="tab-content">
                    @foreach (var item in Model.Where(o => o.Status == 3))
                    {
                        @Html.Partial("_OrderCardPartial", item)
                    }
                </div>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div style="font-size: 3rem; margin-bottom: 20px;">📦</div>
                <h2>Chưa có đơn hàng nào</h2>
                <p>Bạn chưa có đơn hàng nào trong lịch sử mua hàng.</p>
                <a href="/" style="margin-top: 20px; display: inline-block; padding: 12px 24px; background: #2c3e50; color: white; text-decoration: none; border-radius: 20px;">
                    Bắt đầu mua sắm
                </a>
            </div>
        }
    </div>

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <script>
        function showTab(tabName) {
            // Hide all tab contents
            const tabContents = document.querySelectorAll('.tab-content');
            tabContents.forEach(tab => tab.classList.remove('active'));
            
            // Remove active class from all buttons
            const tabButtons = document.querySelectorAll('.tab-button');
            tabButtons.forEach(btn => btn.classList.remove('active'));
            
            // Show selected tab
            document.getElementById(tabName).classList.add('active');
            
            // Add active class to clicked button
            event.target.classList.add('active');
        }
    </script>
</body>
</html>

