@using System.Linq
@{
    ViewData["title"] = "Wishlist - Aurum";
}

<style>
    .wishlist-container {
        background: #ffffff;
        min-height: 100vh;
        padding: 2rem 0;
    }

    .wishlist-header {
        text-align: center;
        margin-bottom: 3rem;
        padding: 0 1rem;
    }

    .wishlist-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #000000;
        margin-bottom: 0.5rem;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        letter-spacing: -1px;
    }

    .wishlist-subtitle {
        color: #666666;
        font-size: 1.1rem;
        font-weight: 400;
        margin: 0;
    }

    .wishlist-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1.5rem;
        padding: 0 1rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    .wishlist-card {
        background: #ffffff;
        border: 1px solid #e5e5e5;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s ease;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
        position: relative;
    }

    .wishlist-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 32px rgba(0, 0, 0, 0.12);
        border-color: #000000;
    }

    .wishlist-image-container {
        position: relative;
        height: 200px;
        overflow: hidden;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .wishlist-image {
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.3s ease;
        padding: 10px;
    }

    .wishlist-card:hover .wishlist-image {
        transform: scale(1.05);
    }

    .wishlist-content {
        padding: 1.25rem;
    }

    .wishlist-product-name {
        font-size: 1.1rem;
        font-weight: 600;
        color: #000000;
        margin-bottom: 0.5rem;
        line-height: 1.4;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        min-height: 2.8rem;
    }

    .wishlist-brand {
        color: #666666;
        font-size: 0.9rem;
        font-weight: 500;
        margin-bottom: 0.75rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .wishlist-price {
        font-size: 1.3rem;
        font-weight: 700;
        color: #000000;
        margin-bottom: 1rem;
    }

    .wishlist-actions {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }

    .btn-add-cart {
        background: #000000;
        color: #ffffff;
        border: none;
        padding: 0.6rem 1.2rem;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.85rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        transition: all 0.3s ease;
        flex: 1;
        justify-content: center;
        cursor: pointer;
    }

    .btn-add-cart:hover {
        background: #333333;
        color: #ffffff;
        transform: translateY(-1px);
        text-decoration: none;
    }

    .btn-remove {
        background: #ffffff;
        color: #dc3545;
        border: 2px solid #dc3545;
        padding: 0.6rem 0.8rem;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.85rem;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.4rem;
        transition: all 0.3s ease;
    }

    .btn-remove:hover {
        background: #dc3545;
        color: #ffffff;
        transform: translateY(-1px);
        text-decoration: none;
    }

    .empty-wishlist {
        text-align: center;
        padding: 4rem 2rem;
        max-width: 500px;
        margin: 0 auto;
    }

    .empty-wishlist-icon {
        font-size: 4rem;
        color: #cccccc;
        margin-bottom: 1.5rem;
    }

    .empty-wishlist-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #000000;
        margin-bottom: 0.5rem;
    }

    .empty-wishlist-text {
        color: #666666;
        margin-bottom: 2rem;
    }

    .btn-shop-now {
        background: #000000;
        color: #ffffff;
        border: none;
        padding: 1rem 2rem;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        display: inline-block;
        transition: all 0.3s ease;
    }

    .btn-shop-now:hover {
        background: #333333;
        color: #ffffff;
        text-decoration: none;
        transform: translateY(-1px);
    }

    /* Confirmation Modal */
    .confirmation-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(4px);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 999999;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        overflow: hidden;
    }

    .confirmation-overlay.show {
        opacity: 1;
        visibility: visible;
    }

    .confirmation-modal {
        background: #ffffff;
        border-radius: 20px;
        padding: 2.5rem;
        max-width: 420px;
        width: 90%;
        max-height: 80vh;
        text-align: center;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
        transform: scale(0.8) translateY(-20px);
        transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
        position: relative;
        margin: auto;
    }

    .confirmation-overlay.show .confirmation-modal {
        transform: scale(1) translateY(0);
    }

    .confirmation-icon {
        font-size: 3rem;
        color: #dc3545;
        margin-bottom: 1rem;
    }

    .confirmation-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #000000;
        margin-bottom: 0.5rem;
    }

    .confirmation-text {
        color: #666666;
        margin-bottom: 1.5rem;
        line-height: 1.5;
    }

    .confirmation-product-name {
        font-weight: 600;
        color: #000000;
    }

    .confirmation-buttons {
        display: flex;
        gap: 1rem;
        justify-content: center;
    }

    .btn-confirm {
        background: #dc3545;
        color: #ffffff;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-confirm:hover {
        background: #c82333;
        transform: translateY(-1px);
    }

    .btn-cancel {
        background: #f8f9fa;
        color: #000000;
        border: 1px solid #dee2e6;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-cancel:hover {
        background: #e9ecef;
        transform: translateY(-1px);
    }

    @@media (max-width: 768px) {
        .wishlist-container {
            padding: 1rem 0;
        }
        
        .wishlist-title {
            font-size: 2rem;
        }
        
        .wishlist-grid {
            grid-template-columns: 1fr;
            gap: 1.5rem;
            padding: 0 1rem;
        }
        
        .wishlist-actions {
            flex-direction: column;
        }
        
        .btn-add-cart,
        .btn-remove {
            width: 100%;
            justify-content: center;
        }

        .confirmation-modal {
            padding: 1.5rem;
        }

        .confirmation-buttons {
            flex-direction: column;
        }

        .btn-confirm,
        .btn-cancel {
            width: 100%;
        }
    }
</style>

<div class="wishlist-container">
    <div class="wishlist-header">
        <h1 class="wishlist-title">Wishlist</h1>
        <p class="wishlist-subtitle">Sản phẩm yêu thích của bạn</p>
    </div>

    @if (TempData["success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin: 0 1rem 2rem;">
            <i class="fas fa-check-circle"></i>
            @TempData["success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin: 0 1rem 2rem;">
            <i class="fas fa-exclamation-circle"></i>
            @TempData["error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model != null && ((List<dynamic>)Model).Count > 0)
    {
        <div class="wishlist-grid">
            @foreach (var wishlist_product in Model)
            {
                <div class="wishlist-card">
                    <div class="wishlist-image-container">
                        <img src="@Url.Action("GetProductImage", "Home", new { productId = wishlist_product.Product.Id })" 
                             alt="@wishlist_product.Product.Name" class="wishlist-image" 
                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                        <div style="display: none; width: 100%; height: 100%; background: #f8f9fa; align-items: center; justify-content: center;">
                            <i class="fas fa-image" style="font-size: 3rem; color: #cccccc;"></i>
                        </div>
                    </div>
                    
                    <div class="wishlist-content">
                        <h3 class="wishlist-product-name">@wishlist_product.Product.Name</h3>
                        <p class="wishlist-brand">@wishlist_product.Product.Brand.Name</p>
                        <div class="wishlist-price">@wishlist_product.Product.Price.ToString("N0").Replace(",", ".") VNĐ</div>
                        
                        <div class="wishlist-actions">
                            <a href="#" class="btn-add-cart" onclick="addToCart(@wishlist_product.Product.Id)">
                                <i class="fas fa-shopping-cart"></i>
                                Thêm vào giỏ
                            </a>
                            <a href="javascript:void(0)" onclick="confirmDelete(@wishlist_product.Product.Id, '@wishlist_product.Product.Name')" 
                               class="btn-remove">
                                <i class="fas fa-trash"></i>
                                Xóa
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-wishlist">
            <div class="empty-wishlist-icon">
                <i class="fas fa-heart"></i>
            </div>
            <h2 class="empty-wishlist-title">Wishlist trống</h2>
            <p class="empty-wishlist-text">Bạn chưa có sản phẩm nào trong wishlist. Hãy khám phá và thêm những sản phẩm yêu thích!</p>
            <a asp-action="Index" asp-controller="Home" class="btn-shop-now">
                <i class="fas fa-shopping-bag"></i>
                Mua sắm ngay
            </a>
        </div>
    }
</div>

<!-- Confirmation Modal -->
<div id="confirmationOverlay" class="confirmation-overlay">
    <div class="confirmation-modal">
        <div class="confirmation-icon">
            <i class="fas fa-exclamation-triangle"></i>
        </div>
        <h3 class="confirmation-title">Xác nhận xóa</h3>
        <p class="confirmation-text">
            Bạn có chắc chắn muốn xóa 
            <span id="productName" class="confirmation-product-name"></span> 
            khỏi danh sách yêu thích?
        </p>
        <div class="confirmation-buttons">
            <button id="confirmButton" class="btn-confirm">
                <i class="fas fa-trash"></i>
                Xóa
            </button>
            <button onclick="hideConfirmation()" class="btn-cancel">
                <i class="fas fa-times"></i>
                Hủy
            </button>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

<script>
    function addToCart(productId) {
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        
        fetch('/Home/AddToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'RequestVerificationToken': token
            },
            body: `productId=${productId}&__RequestVerificationToken=${token}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showNotification('Thành công', data.message, 'success');
                if (typeof updateCartCount === 'function') {
                    updateCartCount();
                }
            } else {
                showNotification('Lỗi', data.message, 'error');
            }
        })
        .catch(error => {
            showNotification('Lỗi', 'Không thể thêm vào giỏ hàng', 'error');
        });
    }

    function showNotification(title, message, type) {
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.innerHTML = `
            <strong>${title}:</strong> ${message}
            <button onclick="this.parentElement.remove()">&times;</button>
        `;
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};
            color: white;
            padding: 15px 20px;
            border-radius: 5px;
            z-index: 10000;
            max-width: 300px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        `;
        document.body.appendChild(notification);
        setTimeout(() => notification.remove(), 5000);
    }

    // Confirmation Modal Functions
    function confirmDelete(productId, productName) {
        document.getElementById('productName').textContent = productName;
        document.getElementById('confirmButton').onclick = function() {
            deleteProduct(productId);
        };
        showConfirmation();
    }

    function showConfirmation() {
        const overlay = document.getElementById('confirmationOverlay');
        const modal = overlay.querySelector('.confirmation-modal');
        
        // Force center positioning
        overlay.style.display = 'flex';
        overlay.style.alignItems = 'center';
        overlay.style.justifyContent = 'center';
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100vw';
        overlay.style.height = '100vh';
        
        // Prevent scrolling
        document.body.style.overflow = 'hidden';
        document.documentElement.style.overflow = 'hidden';
        
        // Show modal with animation
        setTimeout(() => {
            overlay.classList.add('show');
        }, 10);
    }

    function hideConfirmation() {
        const overlay = document.getElementById('confirmationOverlay');
        overlay.classList.remove('show');
        
        // Restore scrolling
        document.body.style.overflow = 'auto';
        document.documentElement.style.overflow = 'auto';
        
        // Hide overlay completely after animation
        setTimeout(() => {
            overlay.style.display = 'none';
        }, 300);
    }

    function deleteProduct(productId) {
        hideConfirmation();
        
        // Show loading notification
        showNotification('Đang xử lý', 'Đang xóa sản phẩm khỏi wishlist...', 'info');
        
        // Redirect to delete action
        window.location.href = `/Home/DeleteWishlist/${productId}`;
    }

    // Close modal when clicking overlay
    document.getElementById('confirmationOverlay').addEventListener('click', function(e) {
        if (e.target === this) {
            hideConfirmation();
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            hideConfirmation();
        }
    });
</script>